name: Test

on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '*.md'

jobs:
  test:
    strategy:
      matrix:
        os: [macos-latest,  windows-latest, ubuntu-latest]
        include:
          - os: macos-latest
            NATIVE_TEST_TASK: :mordant:linkDebugTestMacosArm64 :mordant:macosX64Test
          - os: windows-latest
            NATIVE_TEST_TASK: :mordant:mingwX64Test
          - os: ubuntu-latest
            NATIVE_TEST_TASK: :mordant:linuxX64Test
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v3
      - name: Cache Kotlin Native Compiler
        uses: actions/cache@v3
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-konan-
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17'
          distribution: 'graalvm'
      - uses: gradle/gradle-build-action@v2
        with:
          arguments: :samples:progress:nativeRun
#      - run: ./samples/progress/build/install/progress/bin/progress
#        env:
#          JAVA_OPTS: "-agentlib:native-image-agent=config-merge-dir=mordant/src/jvmMain/resources/META-INF/native-image/com/github/ajalt/mordant"
#      - name: Upload the config
#        uses: actions/upload-artifact@v3
#        with:
#          name: META-INF-${{ runner.os }}
#          path: mordant/src/jvmMain/resources/META-INF/native-image/

env:
  GRADLE_OPTS: -Dorg.gradle.configureondemand=true -Dorg.gradle.parallel=true -Dkotlin.incremental=false -Dorg.gradle.project.kotlin.incremental.multiplatform=false -Dorg.gradle.project.kotlin.native.disableCompilerDaemon=true -Dorg.gradle.jvmargs="-Xmx5g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"
