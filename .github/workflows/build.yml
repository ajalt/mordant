name: Build

on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'samples/**'
      - '*.md'
  push:
    branches:
      - 'master'
    paths-ignore:
      - 'docs/**'
      - 'samples/**'
      - '*.md'
jobs:
  test:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        include:
          - os: ubuntu-latest
            EXTRA_GRADLE_ARGS: :test:graalvm:nativeTest apiCheck
          - os: macos-latest
            env:
              # macos-latest is now macos-14 and has less than half as much memory available as other runners
              GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx6g -Dfile.encoding=UTF-8" -Dorg.gradle.configureondemand=true -Dorg.gradle.parallel=false -Dkotlin.incremental=false -Dorg.gradle.project.kotlin.incremental.multiplatform=false -Dorg.gradle.project.kotlin.native.disableCompilerDaemon=true
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v4
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: 21
          distribution: 'graalvm-community'
          set-java-home: false
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21
      - uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            :mordant:check
            :extensions:mordant-coroutines:check
            :test:proguard:r8jar
            ${{matrix.EXTRA_GRADLE_ARGS}}
            --stacktrace
      - name: Run R8 Jar
        run: java -jar test/proguard/build/libs/main-r8.jar
      - name: Bundle the build report
        if: failure()
        run: find . -type d -name 'reports' | zip -@ -r build-reports.zip
      - name: Upload the build report
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: error-report
          path: build-reports.zip
  publish:
    needs: test
    runs-on: macos-latest
    if: ${{ github.ref == 'refs/heads/master' && github.repository == 'ajalt/mordant' }}
    steps:
      - uses: actions/checkout@v4
      - name: Fetch git tags
        run: git fetch origin +refs/tags/*:refs/tags/*
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17
      - name: Deploy to sonatype
        uses: gradle/gradle-build-action@v2
        with:
          # disable configuration cache due to https://github.com/gradle/gradle/issues/22779
          arguments: publishToMavenCentral -PinferVersion=true --no-configuration-cache
    env:
      ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.ORG_GRADLE_PROJECT_mavenCentralPassword }}
      ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.ORG_GRADLE_PROJECT_signingInMemoryKey }}
      ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.ORG_GRADLE_PROJECT_mavenCentralUsername }}
env:
  GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx12g -Dfile.encoding=UTF-8" -Dorg.gradle.configureondemand=true -Dorg.gradle.parallel=false -Dkotlin.incremental=false -Dorg.gradle.project.kotlin.incremental.multiplatform=false -Dorg.gradle.project.kotlin.native.disableCompilerDaemon=true
